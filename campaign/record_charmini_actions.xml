<?xml version="1.0" encoding="iso-8859-1"?>

<!-- 
  Please see the license.html file included with this distribution for 
  attribution and copyright information.
-->

<root>
	<windowclass name="charmini_weapon" merge="join">
		<sheetdata>
			<number_charweaponfullattack name="attacks">
				<anchored to="attackicons" position="over" />
				<readonly />
				<script>
					function action(draginfo)
						local nValue = getValue();
						local nodeWeapon = window.getDatabaseNode();
						local rActor, rAttack = CharManager.getWeaponAttackRollStructures(nodeWeapon);
						
						local rRolls = {};
						local sAttack, aAttackDice, nAttackMod;
						for i = 1, getValue() do
							rAttack.modifier = DB.getValue(nodeWeapon, "attack" .. i, 0);
							rAttack.order = i;
							
							local nMaxAmmo = DB.getValue(nodeWeapon, 'maxammo', 0)
							local nMaxAttacks = nMaxAmmo - DB.getValue(nodeWeapon, 'ammo', 0)
							if not (nMaxAmmo > 0) or (i &lt;= nMaxAttacks) then	
								table.insert(rRolls, ActionAttack.getRoll(rActor, rAttack));
							elseif (nMaxAmmo > 0) then
								ChatManager.Message(Interface.getString('char_actions_noammo'), nil, rActor);
							end
						end
						
						if not OptionsManager.isOption("RMMT", "off") and #rRolls > 1 then
							for _,v in ipairs(rRolls) do
								v.sDesc = v.sDesc .. " [FULL]";
							end
						end
						
						ActionsManager.performMultiAction(draginfo, rActor, "attack", rRolls);
						
						return true;
					end
					function automateAmmo()
						local nodeAttack = getDatabaseNode().getParent();
						
						local bNotLoaded = (DB.getValue(nodeAttack, 'isloaded') == 0);
						if window.isloaded.hasLoadAction() and bNotLoaded then
							local rActor = ActorManager.getActor("", nodeAttack.getChild('...'));
							local sWeaponName = string.lower(DB.getValue(nodeAttack, 'name', 'ranged weapon'));
							
							ChatManager.Message(string.format(Interface.getString('char_actions_notloaded'), sWeaponName), nil, rActor);
							DB.setValue(nodeAttack, 'isloaded', 'number', 0);
							return true;
						end
					end
					function onDoubleClick(x,y)
						if not automateAmmo() then window.isloaded.setValue(0); return action(); end
					end
				</script>
			</number_charweaponfullattack>
			<number_charweaponattacktotal name="attack1">
				<anchored position="insidetopright" offset="117,5" width="30" height="20" />
				<frame name="fieldlight" offset="5,5,5,5" />
				<modifier>0</modifier>
				<name>Attack 1</name>
				<source><name>attack1modifier</name><op>+</op></source>
				<script>
					function action(draginfo)
						local rActor, rAttack = CharManager.getWeaponAttackRollStructures(window.getDatabaseNode());
						rAttack.modifier = getValue();
						rAttack.order = tonumber(string.sub(getName(), 7)) or 1;
						
						local nodeWeapon = window.getDatabaseNode();
						local nMaxAmmo = DB.getValue(nodeWeapon, 'maxammo', 0)
						local nMaxAttacks = nMaxAmmo - DB.getValue(nodeWeapon, 'ammo', 0)
						if not (nMaxAmmo > 0) or (nMaxAttacks &gt;= 1) then	
							ActionAttack.performRoll(draginfo, rActor, rAttack);
							return true;
						end
					end
					function onDoubleClick(x,y)
						if not window.attacks.automateAmmo() then window.isloaded.setValue(0); return action(); end
					end
				</script>
			</number_charweaponattacktotal>
			
			<buttonfield name="isloaded">
				<anchored width="12" height="12">
					<top parent="label_ammo" anchor="top" relation="relative" offset="4" />
					<right parent="label_ammo" anchor="left" relation="relative" offset="3" />
				</anchored>
				<state icon="button_checkoff" tooltipres="tooltip_actions_unloaded" />
				<state icon="button_checkon" tooltipres="tooltip_actions_loaded" />
				<default>0</default>
				<script>
					function onInit()
						local sNode = getDatabaseNode().getParent().getNodeName();
						DB.addHandler(sNode, "onChildUpdate", onDataChanged);
						onDataChanged();
					end
					function hasLoadAction()
						local bRanged = (window.type.getValue() == 1);
						local sWeaponName = string.lower(DB.getValue(getDatabaseNode().getParent(), 'name', 'ranged weapon'));
						local bHasLoadAction = false
						local tLoadWeapons = { 'firearm', 'crossbow', 'javelin', 'ballista', 'windlass', 'pistol', 'rifle', 'sling', 'loadaction' }
						for _,v in pairs(tLoadWeapons) do
							if string.find(sWeaponName, v) then bHasLoadAction = true; break; end
						end
						
						if bRanged and bHasLoadAction then return true; end
					end
					function onDataChanged()
						if hasLoadAction() then setVisible(true); else setVisible(false); end
					end
					function onButtonPress()
						local nodeActor = getDatabaseNode().getChild('....');
						local rActor = ActorManager.getActor("", nodeActor);
						local sActorName = DB.getValue(nodeActor, 'name', 'Someone');

						local nodeWeapon = window.getDatabaseNode();
						local sWeaponName = string.lower(DB.getValue(nodeWeapon, 'name', 'ranged weapon'));

						local nMaxAmmo = DB.getValue(nodeWeapon, 'maxammo', 0)
						local nMaxAttacks = nMaxAmmo - DB.getValue(nodeWeapon, 'ammo', 0)
						if (getValue() == 1) and nMaxAttacks >= 1 then ChatManager.Message(string.format(Interface.getString('char_actions_load'), sWeaponName), nil, rActor); end
					end
				</script>
			</buttonfield>
		</sheetdata>
	</windowclass>
</root>
