<?xml version="1.0" encoding="iso-8859-1"?>

<!-- 
  Please see the LICENSE.md file included with this distribution for 
  attribution and copyright information.
-->

<root>
	<windowclass name="char_weapon" merge="join">
		<script>
			function onInit()
				registerMenuItem(Interface.getString("menu_deleteweapon"), "delete", 4);
				registerMenuItem(Interface.getString("list_menu_deleteconfirm"), "delete", 4, 3);
				
				local sNode = getDatabaseNode().getPath();
				DB.addHandler(sNode, "onChildUpdate", onDataChanged);
				onDataChanged();
			end
			function onClose()
				local sNode = getDatabaseNode().getPath();
				DB.removeHandler(sNode, "onChildUpdate", onDataChanged);
			end
			function hasLoadAction(nodeWeapon)
				local bHasLoadAction
				local bRanged = (type.getValue() == 1);
				local sWeaponName = string.lower(DB.getValue(nodeWeapon, 'name', 'ranged weapon'));
				for _,v in pairs(AmmunitionManager.tLoadWeapons) do
					if string.find(sWeaponName, v) then bHasLoadAction = true; break; end
				end

				return (bRanged and bHasLoadAction)
			end
			function automateAmmo(nodeWeapon)
				local bNotLoaded = (DB.getValue(nodeWeapon, 'isloaded') == 0);
				DB.setValue(nodeWeapon, 'isloaded', 'number', 0);
				if hasLoadAction(nodeWeapon) and bNotLoaded then
					local rActor = ActorManager.resolveActor(nodeWeapon.getChild('...'));
					local sWeaponName = string.lower(DB.getValue(nodeWeapon, 'name', 'ranged weapon'));

					ChatManager.Message(string.format(Interface.getString('char_actions_notloaded'), sWeaponName), true, rActor);
					return true;
				end
			end
			function onDataChanged()
				onLinkChanged();
				onDamageChanged();
				
				local nodeWeapon = getDatabaseNode();
				local rActor = ActorManager.resolveActor(nodeWeapon.getChild('...'));

				local bRanged = (type.getValue() == 1);
				label_range.setVisible(bRanged);
				rangeincrement.setVisible(bRanged);
				isloaded.setVisible(hasLoadAction(nodeWeapon));

				if not AmmunitionManager.isAmmoPicker(nodeWeapon, rActor) then
					label_ammo.setVisible(bRanged);
					maxammo.setVisible(bRanged);
					ammocounter.setVisible(bRanged);
				else
					label_ammo.setVisible(false);
					maxammo.setVisible(false);
					ammocounter.setVisible(false);
				end
			end
		</script>
		<sheetdata>
			<number_charweaponfullattack name="attacks">
				<anchored to="attackicons" position="over" />
				<script>
					function action(draginfo)
						local nValue = getValue();
						local nodeWeapon = window.getDatabaseNode();
						local rActor, rAttack = CharManager.getWeaponAttackRollStructures(nodeWeapon);

						local rRolls = {};
						local sAttack, aAttackDice, nAttackMod;
						for i = 1, getValue() do
							rAttack.modifier = DB.getValue(nodeWeapon, "attack" .. i, 0);
							rAttack.order = i;

							local nMaxAmmo, nMaxAttacks
							local nodeAmmo = AmmunitionManager.isAmmoPicker(nodeWeapon, rActor)
							if not nodeAmmo then
								nMaxAmmo = DB.getValue(nodeWeapon, 'maxammo', 0)
								nMaxAttacks = nMaxAmmo - DB.getValue(nodeWeapon, 'ammo', 0)
							else
								nMaxAmmo = DB.getValue(nodeAmmo, 'count', 0)
								nMaxAttacks = DB.getValue(nodeAmmo, 'count', 0)
							end

							if not (nMaxAmmo > 0) or (i &lt;= nMaxAttacks) then	
								table.insert(rRolls, ActionAttack.getRoll(rActor, rAttack));
							elseif (nMaxAmmo > 0) then
								ChatManager.Message(Interface.getString('char_actions_noammo'), true, rActor);
							end
						end

						if not OptionsManager.isOption("RMMT", "off") and #rRolls > 1 then
							for _,v in ipairs(rRolls) do
								v.sDesc = v.sDesc .. " [FULL]";
							end
						end

						ActionsManager.performMultiAction(draginfo, rActor, "attack", rRolls);

						return true;
					end
					function onDoubleClick(x,y)
						if not window.automateAmmo(window.getDatabaseNode()) then return action(); end
					end
				</script>
			</number_charweaponfullattack>		
			<number_charweaponattacktotal name="attack1">
				<anchored to="attackframe" position="insidetopleft" offset="3,0" width="27" height="20" />
				<modifier>0</modifier>
				<name>Attack 1</name>
				<source><name>attack1modifier</name><op>+</op></source>
				<script file="campaign/scripts/ammo_attack.lua" />
			</number_charweaponattacktotal>
			<number_charweaponattacktotal name="attack2">
				<anchored to="attack1" position="right" offset="5,0" width="27" />
				<modifier>-5</modifier>
				<name>Attack 2</name>
				<source><name>attack2modifier</name><op>+</op></source>
				<script file="campaign/scripts/ammo_attack.lua" />
			</number_charweaponattacktotal>
			<number_charweaponattacktotal name="attack3">
				<anchored to="attack2" position="right" offset="5,0" width="27" />
				<modifier>-10</modifier>
				<name>Attack 3</name>
				<source><name>attack3modifier</name><op>+</op></source>
				<script file="campaign/scripts/ammo_attack.lua" />
			</number_charweaponattacktotal>
			<number_charweaponattacktotal name="attack4">
				<anchored to="attack3" position="right" offset="5,0" width="27" />
				<modifier>-15</modifier>
				<name>Attack 4</name>
				<source><name>attack4modifier</name><op>+</op></source>
				<script file="campaign/scripts/ammo_attack.lua" />
			</number_charweaponattacktotal>
			
			<!-- Ranged specific fields -->
			<buttonfield name="isloaded">
				<anchored width="12" height="12">
					<top parent="label_ammo" anchor="top" relation="relative" offset="4" />
					<right parent="label_ammo" anchor="left" relation="relative" offset="0" />
				</anchored>
				<state icon="button_checkoff" tooltipres="tooltip_actions_unloaded" />
				<state icon="button_checkon" tooltipres="tooltip_actions_loaded" />
				<default>0</default>
				<script file="campaign/scripts/ammo_isloaded.lua" />
			</buttonfield>
		</sheetdata>
	</windowclass>
	
	<windowclass name="char_weapon_editor" merge="join">
		<frame>recordsheet</frame>
		<placement>
			<size width="400" height="388" />
		</placement>
		<sizelimits>
			<minimum width="400" height="388" />
			<dynamic />
		</sizelimits>
		<nodelete />
		<playercontrol />
		<tooltip control="name" />
		<sheetdata>
			<windowtitlebar name="title">
				<resource>weapon_title</resource>
			</windowtitlebar>
			
			<frame_record_editor name="contentframe" />

			<subwindow_record name="main">
				<class>char_weapon_editor_main</class>
				<activate />
			</subwindow_record>
			<scrollbar_record>
				<target>main</target>
			</scrollbar_record>

			<resize_recordsheet />
			<close_recordsheet />
		</sheetdata>
	</windowclass>

	<windowclass name="char_weapon_editor_main" merge="join">
		<sheetdata>
			<!-- Ammo -->
			<header_column name="header_ammo">
				<insertbefore>header_damage</insertbefore>
				<static textres="weapon_header_ammo" />
				<center />
			</header_column>
			<basicstring name="ammopicker">
				<anchored width="175">
					<top parent="columnanchor" anchor="bottom" relation="relative" offset="22" />
					<left offset="5" />
				</anchored>
				<multilinespacing>20</multilinespacing>
				<tabtarget next="recoverypercentage" />
				<script file="campaign/scripts/ammo_ammopicker.lua" />
			</basicstring>
			<basicnumber name="recoverypercentage">
				<anchored to="ammopicker" width="40" height="20">
					<top anchor="top" offset="0" />
					<left anchor="right" offset="15" />
				</anchored>
				<default>50</default>
				<script>
					function onDoubleClick(x,y)
						local nMisses = window.missedshots.getValue() or 0
						if nMisses >= 1 then
							local nPercent = 0.01 * (getValue() or 50)
							local nAmmoRecovered = math.floor(nMisses * nPercent)
							ChatManager.SystemMessage(string.format(Interface.getString('char_actions_recoveredammunition'), nAmmoRecovered))

							local nodeWeapon = window.getDatabaseNode();
							local nMaxAmmo, nMaxAttacks
							local nodeAmmo = AmmunitionManager.isAmmoPicker(nodeWeapon, ActorManager.resolveActor(getDatabaseNode().getChild('....')))
							if not nodeAmmo then
								local nAmmoUsed = DB.getValue(nodeWeapon, 'ammo', 0) - nAmmoRecovered
								if nAmmoUsed and nAmmoUsed &lt; 0 then ChatManager.SystemMessage(string.format(Interface.getString('char_actions_excessammunition'), -1 * nAmmoUsed)) end
								DB.setValue(nodeWeapon, 'ammo', 'number', math.max(nAmmoUsed, 0))
							else
								nCount = DB.getValue(nodeAmmo, 'count', 0)
								nCount = nCount + nAmmoRecovered
								DB.setValue(nodeAmmo, 'count', 'number', nCount)
							end

							window.missedshots.setValue(0)
						end
					end
				</script>
				<tabtarget prev="ammopicker" next="missedshots" />
			</basicnumber>
			<label_fieldtop name="label_recoverypercentage">
				<anchored to="recoverypercentage" />
				<tooltip textres="weapon_tooltip_recoverypercentage" />
				<static textres="weapon_label_recovery" />
				<readonly />
			</label_fieldtop>
			<label name="label_ammopercentof">
				<anchored to="recoverypercentage" position="righthigh" offset="5,0" width="35" />
				<static>% of </static>
				<center />
			</label>
			<basicnumber name="missedshots">
				<anchored to="label_ammopercentof" position="righthigh" offset="5,0" width="40" height="20" />
				<default>0</default>
				<hideonvalue>0</hideonvalue>
			</basicnumber>
			<label_fieldtop name="label_missedshots">
				<anchored to="missedshots" />
				<static textres="weapon_label_missedshots" />
				<readonly />
			</label_fieldtop>
		</sheetdata>
	</windowclass>
</root>
